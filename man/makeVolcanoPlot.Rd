% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tcRdiff_and_makeVolcanoPlot.R
\name{makeVolcanoPlot}
\alias{makeVolcanoPlot}
\title{makeVolcanoPlot: Makes volcano plots using tcRdiff's output}
\usage{
makeVolcanoPlot(
  data,
  ident.1 = NULL,
  ident.2 = NULL,
  expansion.score.threshold = Inf,
  log2FC.threshold = 0,
  fisher.score.threshold = Inf,
  limits.x = c(NA, NA),
  colors = c("red", "blue", alpha("grey85", 0.8)),
  point.size.range = c(5, 2),
  ...
)
}
\arguments{
\item{data}{data.table. Output from tcRdiff function}

\item{ident.1}{string. Identity class with a sample name of interest.}

\item{ident.2}{string. A second identity class for comparison.}

\item{expansion.score.threshold}{numeric. To threshold enrichment of clonal expansion within the cluster}

\item{log2FC.threshold}{numeric. A threshold for the log2FC values calculated by the tcRdiff function}

\item{fisher.score.threshold}{numeric. A threshold for the p-value obtained by performing the Fisher's exact test with a contingency table containing unique_cdr3_sample, unique_cdr3_ref, the number of remaining sample sequences and the number of remaining reference sequences.The score reports the probability that a random sample of the same size as the sample set but into the reference set (i.e. naive repertoire) would generate an enrichment of the given motif at least as high as has been observed in the sample set.}

\item{limits.x}{x-axis limits set to c(NA, NA) by default}

\item{colors}{set to c("red", "blue", alpha("grey85",0.8)) by default}

\item{point.size.range}{set to c(5,2) by default}
}
\description{
Uses the opuput data from the tcRdiff function to make a volcano plot to distinguish between clonally expanded motifs.
}
\examples{
# example code

# Read GLIPH output with 'sample_name' column (with only sample information)
data <- read.csv("36604540_GLIPH2_Output.csv")

# Calculate statistics
df <- tcRDiff(data, ident.1 = "MtbLys",ident.2 = "D360", save = F, expansion.score.threshold = 0.05, fisher.score.threshold = 0.05)

# Make volcano plot
makeVolcanoPlot(df, ident.1 = "MtbLys",ident.2 = "D360", log2FC.threshold = 0, expansion.score.threshold = 0.05)
dev.off()
}
